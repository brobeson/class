Brendan Robeson
CS 6680
Final Project Proposal

I plan to implement Automatic Car Counting Method for Unmanned Aerial Vehicle Images by Thomas Moranduzzo and Farid Melgani. The paper was published in IEEE Transactions on Geoscience and Remote Sensing, volume 52 number 3, in 2014 March. The paper can be retrieved from http://ieeexplore.ieee.org.dist.lib.usu.edu/document/6514618/.
This paper attempts to solve the problem of automatically identifying cars within imagery captured by a camera mounted on an unmanned aerial vehicle (UAV). This is an interesting topic primarily for urban planning. Evaluating traffic congestion requires counting cars on a stretch of road. Before cars can be counted, they must be identified. Current methods are designed for low resolution imagery, typically 20 cm or more per pixel. This paper provides a solution for high resolution: 2 cm per pixel. Such high resolution is possible due to UAVs’ ability to fly at low altitudes.
The authors do not make their data publicly available. UAV image data sets are available at https://www.sensefly.com/drones/example-datasets.html. These data sets were captured and made available by a company producing UAV technology for sales purposes. According to https://www.sensefly.com/more/conditions-of-use.html, these images may be used for “personal noncommercial use.” These images appear similar to samples shown in the paper. They also are of similar resolution, ranging from 2 to 5 cm per pixel.
The authors’ method starts by restricting the search to asphalt areas of an image. The asphalt areas are segregated into the foreground; non-asphalt areas make up the background. Independently, keypoints are identified via a feature extraction. Next, the keypoints are classified into those belonging to cars, and those which do not. Keypoints which do not belong to cars are discarded. The car keypoints are combined with the asphalt segmentation to remove keypoints which are not on asphalt. Finally, the remaining car keypoints are combined such that there is a one-to-one relationship between keypoints and cars. Thus, the number of keypoints is equal to the number of cars in the image.
My implementation will be in Matlab. Matlab functions for morphological dilation and erosion will be employed, as will Matlab’s support for support vector machines (SVM). There is a SIFT function available at MathWorks file exchange (https://www.mathworks.com/matlabcentral/fileexchange/50319-sift-feature-extreaction). No known implementation of keypoint merging, as described in the paper, exists. That algorithm will have to be implemented as part of this project.
The authors assume that cars are only on asphalt areas. This is not a valid assumption for universal use of this method. Rural locations tend to have some gravel and dirt roads. National and state parks may have gravel parking areas.
Results can be shown by displaying a processed image, captioned with the number of cars found by algorithm. The most important metric for this algorithm is the counting accuracy. For a small set of images, the number of cars can be counted manually, and entered into a data file. A program which runs the algorithm can read the data file and compare the actual counts to the computed counts. The results can be shown in an appropriate plot, probably line graphs.

Proposed Schedule:
	November 26	Initial work on presentation slides, summarizing the algorithm
	December 3	Implementation of asphalt segmentation and keypoint extraction with intermediate images.
	December 10	Complete implementation and results.
